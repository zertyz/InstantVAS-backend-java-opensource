package instantvas.smsengine.producersandconsumers;

import static config.InstantVASLicense.*;
import static instantvas.smsengine.SMSAppEngineInstrumentationMethods.*;

import config.InstantVASInstanceConfiguration;
import mutua.events.EventClient;
import mutua.events.IEventLink;
import mutua.hangmansmsgame.smslogic.SMSProcessor;
import mutua.icc.instrumentation.Instrumentation;
import mutua.smsin.dto.IncomingSMSDto;

/** <pre>
 * MOConsumer.java
 * ===============
 * (created by luiz, Mar 16, 2016)
 *
 * Processes MO events generated by {@link MOProducer}, transmitted via an instance of {@link IEventLink}
 *
 * @version $Id$
 * @author luiz
*/

public class MOConsumer implements EventClient<EInstantVASEvents> {

	private SMSProcessor smsP;
	
	public MOConsumer(InstantVASInstanceConfiguration ivac,
	                  MTProducer             mtProducer) {
		smsP = new SMSProcessor(mtProducer, ivac.modulesNavigationStates, ivac.modulesCommandProcessors);
	}
	
	@InstantVASEvent(EInstantVASEvents.MO_ARRIVED)
	public void processMO(IncomingSMSDto mo) {
		
		startMOProcessingRequest(mo);
		
		try {
			smsP.process(mo);
		} catch (Throwable t) {
			Instrumentation.reportThrowable(t, "Error while processing MO -- "+mo.toString());
		}
		
		finishRequest();
	}
}
