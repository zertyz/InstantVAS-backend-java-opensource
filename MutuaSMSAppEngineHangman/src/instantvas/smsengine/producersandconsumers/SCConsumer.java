package instantvas.smsengine.producersandconsumers;

import static instantvas.smsengine.SMSAppEngineInstrumentationMethods.*;

import config.InstantVASInstanceConfiguration;
import mutua.events.EventClient;
import mutua.events.IEventLink;
import mutua.icc.instrumentation.Instrumentation;
import mutua.smsappmodule.smslogic.SMSAppModuleCommandsSubscription;

/** <pre>
 * SCConsumer.java
 * ===============
 * (created by luiz, Mar 16, 2016)
 *
 * Processes "Subscription Cancellation" events generated by {@link SCProducer}, transmitted via an instance of {@link IEventLink}.
 *
 * @version $Id$
 * @author luiz
*/

public class SCConsumer implements EventClient<EInstantVASEvents> {

	private SMSAppModuleCommandsSubscription subscriptionCommands;
	
	public SCConsumer(InstantVASInstanceConfiguration ivac) {
		subscriptionCommands = ivac.subscriptionCommands;
	}
	
	@InstantVASEvent(EInstantVASEvents.SUBSCRIPTION_CANCELLED)
	public void assureMSISDNIsNotSubscribed(String msisdn) {
		try {
			startConsumeUnsubscribeUserRequest(msisdn);
			subscriptionCommands.unsubscribeUser(msisdn);
		} catch (Throwable t) {
			Instrumentation.reportThrowable(t, "Error while assuring MSISDN '"+msisdn+"' is not subscribed");
		} finally {
			finishRequest();
		}
	}
}
